PROBLEM 1 SORT PROBLEM (DUTCH NATONAL FLAG PROBLEM)
#include <vector>
#include <iostream>
using namespace std;

void sortColors(vector<int>& nums) {
    int low = 0, mid = 0, high = nums.size() - 1;
    
    while (mid <= high) {
        if (nums[mid] == 0) {
            swap(nums[low], nums[mid]);
            low++;
            mid++;
        } else if (nums[mid] == 1) {
            mid++;
        } else {
            swap(nums[mid], nums[high]);
            high--;
        }
    }
}

int main() {
    vector<int> nums = {2,0,2,1,1,0};
    sortColors(nums);
    
    for (int num : nums) {
        cout << num << " ";
    }
    return 0;
}
PROBLEM 2 Kth LARGEST ELEMENT IN AN ARRAY
#include <vector>
#include <queue>
#include <iostream>
using namespace std;

int findKthLargest(vector<int>& nums, int k) {
    priority_queue<int, vector<int>, greater<int>> minHeap;
    
    for (int num : nums) {
        minHeap.push(num);
        if (minHeap.size() > k) {
            minHeap.pop();
        }
    }
    
    return minHeap.top();
}

int main() {
    vector<int> nums = {3,2,1,5,6,4};
    int k = 2;
    cout << "The " << k << "th largest element is: " << findKthLargest(nums, k) << endl;
    
    nums = {3,2,3,1,2,4,5,5,6};
    k = 4;
    cout << "The " << k << "th largest element is: " << findKthLargest(nums, k) << endl;
    
    return 0;
}
